#include<cstdio>#include<iostream>#include<string>#include<cstring>#include<cmath>#include<algorithm>#include<queue>#include<cstdlib>#include<vector>#include<set>#include<map>#include<stack>#include <unordered_set>#include <unordered_map>using namespace std;const int maxn = 1e5 + 10;typedef long long LL;typedef unsigned long long ULL;#define fo(i,a,b) for(int i=a;i<=b;i++)#define mp make_pair#define pb push_back#define CLR(a,x) memset(a,x,sizeof(a))class Solution {public:    int lengthOfLongestSubstring(string s) {		int n=s.size();		unordered_set<char> t;auto it=t.begin();		int start=0,maxlen=0,i,j;        for(i=0;i<n;i++)		{			if((it=t.find(s[i]))!=t.end())			{				maxlen=max(maxlen,i-start);				j=start;				for(;j<n && s[j]!=s[i];j++) t.erase(s[j]);				start=j+1;			}			else				t.insert(s[i]);		}		maxlen=max(maxlen,i-start);		return maxlen;    }};